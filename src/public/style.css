body {
  background-color: #444;
  color: yellow;
  overflow: hidden;
}

#tracks {
  display: grid;
  grid-template-columns: max-content auto;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
  gap: .5em 1em;
  user-select: none;
  position: relative;
}

#tracks #popup {
  position: absolute;
  z-index: 2;
  border: 1px solid black;
  background-color: #f7f090;
  color: #333;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 10px;
  padding: 4px;
  opacity: 0;
  transition: opacity .4s ease-in;
  display: none;
  white-space: nowrap;
}

#tracks #cursors {
  grid-column: 2 / 3;
  /* TODO: Rows need to be all tracks + time + what? */
  grid-row: 1 / 10;
  position: absolute;
  /* overflow: hidden; - why? */
  width: 100%;
  height: 100%;
}

#cursors #playcursor {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 1px;
  height: 230px;
  background-color: red;
  pointer-events: none;
  z-index: 2;  
  --timecode: "0:30";
  /* transition: transform .8s ease-in; */
}

#cursors #playcursor::before {
  content: var(--timecode);
  display: block;
  transform: translate(-1em,-100%);
  color:  rgb(243, 124, 124);
  
}

#cursors #usercursor {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 1px;
  height: 230px;
  background-color: greenyellow;
  pointer-events: none;
  z-index: 2;
  /* transition: transform .8s ease-in; */
  --timecode: "0:30";
}

#cursors #usercursor::after {
  display: block;
  content: var(--timecode);
  position: absolute;
  font-family: Arial;
  font-size: 10px;
  left: 2px;
  bottom: 20px;
}

.playing {
  box-shadow: 0 0px 15px 1px rgba(227,70,70,.5);
  animation: pulsate 1s ease-in-out infinite alternate;
}
  
@keyframes pulsate {
  from {
    background-color: rgb(243, 124, 124);
  }
  to {
    background-color: rgb(146, 25, 25);
 }
}

#tracks #popup.show {
  opacity: 1;
  display: block;
}

#tracks #popup.delete {
  background-color: rgb(190, 42, 42);
  color: transparent;
} 

#tracks #popup.delete::before {
  content: "Delete";
  position: absolute;
  color: pink;
}

.led {
  display: inline-block;
  width: .7em;
  height: .7em;
  border-radius: 50%;
  border: 1px solid black;
  margin-right: 4px;
  transform: translate(0,1px);
}

.led.off {
  background-color: rgb(146, 25, 25);
}

.led.on {
  background-color: rgb(255, 25, 25);
  box-shadow: 0px 0px 10px rgb(230, 78, 78);
}


.timeline {
  background-color: #aaa;
  position: relative;
  overflow: hidden;
  cursor: copy;
}

.timeline span {
  display: block;
  position: absolute;
  width: 20vw; /* TODO: Set depending on width and height */
  height: 100%;
  background-color: yellow;
  box-sizing: border-box;
  cursor: pointer;
}

.timeline span.usercreated {
  background-color: #d1d17a;
}

.timeline span::before {
  content: "";
  position: absolute;
  /* background-color: red; */
  height: 100%;
  width: 8px;
  cursor: ew-resize;
}

.timeline span::after {
  content: "";
  position: absolute;
  right: 0;
  /* background-color: green; */
  height: 100%;
  width: 8px;
  cursor: ew-resize;
}

.timeline span.selected.resize.start {
  border-left: 2px solid red;
}

.timeline span.selected.resize.end {
  border-right: 2px solid red;
}

.timeline span.selected.resize {
  /* cursor: ew-resize; */
}

.timeline span.selected.move {
  cursor: move;
}

#timecodes {
  z-index: 0; /* necessary to allow for clicking in the timecode-area */
}

#scroller {
  grid-column: 1 / 3;
  background-color: #333;
  border-radius: 1em;
  width: 100%;
  height: 16px;
  position: relative;
}

#scrollbar {
  position: absolute;
  /* Width and left is configured by the zoomfactor! */
  height: 16px;
  color: #eee;
  background-color: #666;
  border-radius: 1em;
  display: flex;
  justify-content: space-between;
  cursor: grab;
}

#scrollbar .handle {
  display: block;
  height: 16px;
  width: 16px;
  border: 2px solid #eee;
  background-color: #888;
  border-radius: 50%;
  box-sizing: border-box;
}

#scrollbar.grabbing {
  cursor: grabbing;
}

.controls {
  color: #aaa;
  font-family: Arial, Helvetica, sans-serif;
}

button {
  border-radius: .5em;
}

#exportmessage {
  border: 2px solid rgba(180, 19, 19, 0.644);
  padding: .5em;
  border-radius: .5em;
  margin-bottom: 1em;
  display: grid;
  grid-template-columns: auto minmax(auto, 10em) minmax(auto, 10em);
  grid-template-rows: 2.5em;
  gap: 1em;
  opacity: 0;
  transition: opacity .5s;
  pointer-events: none;
}

#exportmessage p {
  font-weight: bold;
  align-self: center;
}

#exportmessage.show {
  pointer-events: all;
  opacity: 1;
  animation: borderpulse 5s ease-in infinite alternate;
}

@keyframes borderpulse {
  from {
    border-color: rgb(112, 2, 2);
  }
  to {
    border-color: rgb(187, 4, 4);
  }
}

#player {
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: 1.7em 2em;
  gap: .3em 0;
}

#player button.active {
  background: #4fb845;
  border-color: rgb(132, 224, 132);
  font-weight: bold;
}

#player .realtime {
  grid-column: 1 / 6;
  grid-row: 1/2;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

#player .adjusted {
  grid-column: 6 / 11;
  grid-row: 1/2;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

#player .speed {
  grid-column: 1 / 9;
  grid-row: 2/2;
  transform: scaleX(-1); /* flip the slider from max -> min */
}

#player .speedlabels {
  grid-column: 1 / 9;
  grid-row: 2/2;
  font-size: 10px;
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  padding: 3px;
  transform: translate(0,4px);
  pointer-events: none;
}

#player .speedlabels p {
  margin: 0;
}

#player .playbutton {
  grid-column: 9 / 11;
}

.playbutton[data-state='paused']::before {
  content: "▶";
}

.playbutton[data-state='playing']::before {
  content: "⏸";
}

#player .speedadjust {
  transition: opacity .4s;
}

#player [disabled] {
  opacity: .3;
}